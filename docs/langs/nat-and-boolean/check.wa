import { Exp, Boolean, Nat } from "exp.wa"

datatype Type {
  boolean
  nat
}

Check [exp, Type::boolean] -- { Boolean exp }
Check [exp, Type::nat] -- { Nat exp }

Check [Exp::add1(x), Type::nat]
-------------------------------- {
  Check [x, Type::nat]
}

Check [Exp::sub1(x), Type::nat]
-------------------------------- {
  Check [x, Type::nat]
}

Check [Exp::isZero(x), Type::boolean]
-------------------------------------- {
  Check [x, Type::nat]
}

Check [Exp::if(p, t, f), type]
------------------------------- {
  Check [p, Type::boolean]
  Check [t, type]
  Check [f, type]
}

find exp limit 30 {
  Check [exp, Type::nat]
}

find exp limit 30 {
  Check [exp, Type::boolean]
}

find type {
  Check [
    Exp::if(
      Exp::isZero(Exp::add1(Exp::add1(Nat::zero))),
      Exp::add1(Nat::zero),
      Exp::add1(Exp::add1(Nat::zero)),
    ),
    type
  ]
}
