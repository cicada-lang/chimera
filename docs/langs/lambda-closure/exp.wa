Exp Exp::var(name) -- { String name }
Exp Exp::fn(name, ret) -- { String name Exp ret }
Exp Exp::ap(target, arg) -- { Exp target Exp arg }

Value Value::closure(name, ret, env) -- { String name Exp ret Env env }

Env []
Env [[name, value] | rest] -- { String name Value value Env rest }

Lookup [[[key, value] | _rest], key, value] -- here

Lookup [[[key, _value] | rest], name, found]
--------------------------------------------- there {
  key != name
  Lookup [rest, name, found]
}

Eval [env, Exp::var(name), value]
---------------------------------- var {
  Lookup [env, name, value]
}

Eval [env, Exp::fn(name, ret), value]
---------------------------------------- fn {
  value = Value::closure(name, ret, env)
}

Eval [env, Exp::ap(target, arg), value]
---------------------------------------- ap {
  Eval [env, target, Value::closure(name, ret, env2)]
  Eval [env, arg, argValue]
  Eval [[[name, argValue] | env2], ret, value]
}
