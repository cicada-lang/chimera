[ 
  var(_.0) with { $TypeConstraint(String)(_.0) },
  fn(_.0, var(_.1)) with { $TypeConstraint(String)(_.1) $TypeConstraint(String)(_.0) },
  ap(var(_.0), var(_.1)) with { $TypeConstraint(String)(_.1) $TypeConstraint(String)(_.0) },
  fn(_.0, fn(_.1, var(_.2))) with {
    $TypeConstraint(String)(_.2)
    $TypeConstraint(String)(_.1)
    $TypeConstraint(String)(_.0)
  },
  fn(_.0, ap(var(_.1), var(_.2))) with {
    $TypeConstraint(String)(_.2)
    $TypeConstraint(String)(_.1)
    $TypeConstraint(String)(_.0)
  },
  ap(var(_.0), fn(_.1, var(_.2))) with {
    $TypeConstraint(String)(_.2)
    $TypeConstraint(String)(_.1)
    $TypeConstraint(String)(_.0)
  },
  ap(fn(_.0, var(_.1)), var(_.2)) with {
    $TypeConstraint(String)(_.2)
    $TypeConstraint(String)(_.1)
    $TypeConstraint(String)(_.0)
  },
  fn(_.0, fn(_.1, fn(_.2, var(_.3)))) with {
    $TypeConstraint(String)(_.3)
    $TypeConstraint(String)(_.2)
    $TypeConstraint(String)(_.1)
    $TypeConstraint(String)(_.0)
  },
  ap(var(_.0), ap(var(_.1), var(_.2))) with {
    $TypeConstraint(String)(_.2)
    $TypeConstraint(String)(_.1)
    $TypeConstraint(String)(_.0)
  },
  ap(ap(var(_.0), var(_.1)), var(_.2)) with {
    $TypeConstraint(String)(_.2)
    $TypeConstraint(String)(_.1)
    $TypeConstraint(String)(_.0)
  }
]
[ 
  ap(fn("x", fn("y", var("x"))), fn("z", var("z"))),
  ap(fn("x", ap(var("x"), fn("y", var("x")))), fn("z", var("z"))),
  ap(
    fn("x", ap(fn(_.0, var(_.0)), fn("y", var("x")))),
    fn("z", var("z")),
  )
]
