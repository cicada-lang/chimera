// There are many way to represent `Nat`.

// Using 1 and list:

// Zero []
// Add1 [n, [1 | n]]

// Nat n -- { Zero n }
// Nat n -- { Add1 [prev, n] Nat prev }

// Using data constructor:

Zero Nat::zero
Add1 [prev, Nat::add1(prev)]

Nat Nat::zero
Nat Nat::add1(prev) -- { Nat prev }

One n -- { Add1 [prev, n] Zero prev }
Two n -- { Add1 [prev, n] One prev }
Three n -- { Add1 [prev, n] Two prev }
Four n -- { Add1 [prev, n] Three prev }
Five n -- { Add1 [prev, n] Four prev }
Six n -- { Add1 [prev, n] Five prev }
Seven n -- { Add1 [prev, n] Six prev }
Eight n -- { Add1 [prev, n] Seven prev }
Nine n -- { Add1 [prev, n] Eight prev }
Ten n -- { Add1 [prev, n] Nine prev }
Eleven n -- { Add1 [prev, n] Ten prev }
Twelve n -- { Add1 [prev, n] Eleven prev }
