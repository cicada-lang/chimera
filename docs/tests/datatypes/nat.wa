// Zero 0
// Add1 [n, { prev: n }]

Zero []
Add1 [n, [1, ...n]]

Sub1 [n, prev]
----------------- {
  Add1 [prev, n]
}

Nat n
--------- {
  Zero n
}

Nat n
----------- {
  Sub1 [n, prev]
  Nat prev
}

One n -- { Sub1 [n, prev] Zero prev }
Two n -- { Sub1 [n, prev] One prev }
Three n -- { Sub1 [n, prev] Two prev }
Four n -- { Sub1 [n, prev] Three prev }
Five n -- { Sub1 [n, prev] Four prev }
Six n -- { Sub1 [n, prev] Five prev }
Seven n -- { Sub1 [n, prev] Six prev }
Eight n -- { Sub1 [n, prev] Seven prev }
Nine n -- { Sub1 [n, prev] Eight prev }
Ten n -- { Sub1 [n, prev] Nine prev }
Eleven n -- { Sub1 [n, prev] Ten prev }
Twelve n -- { Sub1 [n, prev] Eleven prev }

Add [x, y, y]
------------- {
  Zero x
}

Add [x, y, out]
-------------------- {
  Sub1 [x, prev]
  Sub1 [out, res]
  Add [prev, y, res]
}

query z {
  One x
  One y
  Add [x, y, z]
}

query (x, y, z) limit 1 {
  Add [x, y, z]
}

query (x, y, z) limit 3 {
  Add [x, y, z]
}

query (x, y) {
  Two z
  Add [x, y, z]
}

Mul [x, y, out]
--------------- {
  Zero x
  Zero out
}

Mul [x, y, out]
----------------- {
  Sub1 [x, prev]
  Zero y
  Zero out
}

Mul [x, y , out]
----------------- {
  Sub1 [x, prev]
  Sub1 [y, _prev]
  Add [y, z, out]
  Mul [prev, y, z]
}

query z {
  Two x
  Two y
  Mul [x, y, z]
}

query (x, y) { Two z Mul [x, y, z] }
query (x, y) { Four z Mul [x, y, z] }
query (x, y) { Five z Mul [x, y, z] }
query (x, y) { Six z Mul [x, y, z] }
// query (x, y) { Seven z Mul [x, y, z] }
// query (x, y) { Eight z Mul [x, y, z] }
// query (x, y) { Nine z Mul [x, y, z] }
// query (x, y) { Ten z Mul [x, y, z] }
// query (x, y) { Eleven z Mul [x, y, z] }
// query (x, y) { Twelve z Mul [x, y, z] }
