clause Lookup(map, name, found)
------------------------- here {
  map = [[key, value] | _rest]
  key = name
  found = value
}

clause Lookup(map, name, found)
------------------------------- there {
  map = [[key, _value] | rest]
  key != name
  Lookup(rest, name, found)
}

find x {
  map = [["a", 1], ["b", 2], ["c", 3]]
  Lookup(map, "b", x)
}

find map limit 3 {
  Lookup(map, "b", 2)
}

// TODO We need to improve our search strategy
// to make the following perform the same as the above.

clause LookupInlineDisj(map, name, found)
------------------------------------ {
  map = [[key, value] | rest]
  disj {
    conj { key = name found = value }
    conj { key != name LookupInlineDisj(rest, name, found) }
  }
}

find x {
  map = [["a", 1], ["b", 2], ["c", 3]]
  LookupInlineDisj(map, "b", x)
}

find map limit 3 {
  LookupInlineDisj(map, "b", 2)
}
