assert find _ {
  String "A"
}

assert not find _ {
  String 1
}

assert find x {
  x = "cat"
  String x
}

// Reification.

find x {
  String x
}

// An unification breaks a type constraint.

assert not find x {
  String x
  x = 1
}

// An indirect unification breaks a type constraint.

assert not find x {
  String x
  x = z
  z = 1
}

assert not find x {
  x = z
  z = 1
  String x
}

assert not find x {
  x = z
  String x
  z = 1
}

// An unification subsums a type constraint.

assert find x {
  String x
  x = "A"
}

// An indirect unification subsums a type constraint.

assert find x {
  String x
  x = z
  z = "A"
}

assert find x {
  x = z
  z = "A"
  String x
}

assert find x {
  x = z
  String x
  z = "A"
}
